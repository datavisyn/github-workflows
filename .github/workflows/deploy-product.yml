name: Deploy product repository

on: 
  workflow_call:
    secrets:
      DATAVISYN_BOT_REPO_TOKEN:
        required: true
      DV_DEVOPS:
        required: true
      DV_QMS:
        required: true        
      DV_AWS_ECR_REGISTRY:
        required: false         
    inputs:
      stage:
        description: "stage that should be deployed (develop|qa|production)"
        required: true
        type: choice
        options: 
        - develop
        - qa
        - production
        default: develop
      customer:
        description: "customer for that the app should be deployed"
        required: true
        type: choice
        options: ${{ secrets.POSSIBLE_CUSTOMERS }}
        default: datavisyn   
permissions:
  id-token: write
  contents: read

concurrency:
  group: '${{ github.workflow }}-${{ github.ref || github.head_ref }}'
  cancel-in-progress: true

env: 
  GA_VERSION: "main"

jobs:
  deploy:
    runs-on: ubuntu-20.04
    steps:
      - name: check actor
        run: |
          dv_devops=$DV_DEVOPS
          dv_qms=$DV_QMS
          actor=$GITHUB_ACTOR
          array1=($(echo "${dv_devops}" | tr ',' "\n"))
          array2=($(echo "${dv_qms}" | tr ',' "\n"))
          array1+=(${array2[@]})
          for e in "${array1[@]}"; do 
            if [[ "$e" == "$actor" ]] ; then
              exit 0
            fi
          done
          echo "you are not allowed to run this job!"
          exit 1
        env: 
          DV_DEVOPS: ${{ secrets.DV_DEVOPS }}
          DV_QMS: ${{ secrets.DV_QMS }}
          GITHUB_ACTOR: ${{ github.actor }}
      # checkout repo to get package.json    
      - uses: actions/checkout@v3
      # checkout this workflow repository to get actions
      - uses: actions/checkout@v3
        with:
          repository: datavisyn/github-workflows
          ref: node16
          path: ./tmp/github-workflows
      - uses: ./tmp/github-workflows/.github/actions/get-product-parameters
        id: get-parameters
        with:
          repository_name: ${{ github.event.repository.name }}
          branch_name: ${{ github.base_ref }}
          has_workspace_branches: ${{ secrets.HAS_WORKSPACE_BRANCHES }}
          time_zone: ${{ env.TIME_ZONE }}
      - name: Get images
        id: get-images
        run: |
          images=()
          backend_image=$ECR_REGISTRY/$BACKEND_REPO:$IMAGE_TAG
          frontend_image=$ECR_REGISTRY/$FRONTEND_REPO:$IMAGE_TAG
          images+=($frontend_image)
          images+=($backend_image)
          images="$(IFS=',';echo "${images[*]}")"
          echo "images: $images"
          echo "::set-env name=images::$images"
        env:
          ECR_REGISTRY: ${{ secrets.DV_AWS_ECR_REGISTRY }}
          FRONTEND_REPO: ${{ steps.get-parameters.outputs.web_repo }}
          BACKEND_REPO: ${{ steps.get-parameters.outputs.api_repo }}
          IMAGE_TAG: ${{ steps.get-parameters.outputs.image_tag1 }}
      - name: trigger deployment
        uses: datavisyn/github-action-trigger-workflow@v1   
        with:
          owner: "datavisyn" 
          repo:  "infrastructure-k8s"
          github_token: ${{ secrets.DATAVISYN_BOT_REPO_TOKEN }}
          workflow_file_name: "deploy-app.yml"
          ref: "main"
          github_user: ${{ secrets.DV_BOT_USER }}
          client_payload: '{ "app": "${{steps.get-parameters.outputs.app}}", "customer": "${{inputs.customer}}", "stage": "${{inputs.stage}}", "sub_app": "${{steps.get-parameters.outputs.sub_app}}", "images": "${{steps.get-images.outputs.images}}" }'
