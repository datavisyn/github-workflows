name: build-node-python

on:
  workflow_call:
    inputs:
      branch:
        type: string
        required: false
        default: ${{ github.ref || github.head_ref }}
      cypress_enable:
        description: "Global enable for cypress"
        type: boolean
        required: false
        default: false
      cypress_run_because_flag:
        description: "Local flag to run cypress. Will only work if cypress_enable: true."
        type: boolean
        required: false
        default: false
      cypress_run_because_branch:
        description: "Branch names to run cypress on. Will only work if cypress_enable: true."
        # TODO: actionlint is failing as it expects true/false as default value for boolean types
        type: string
        required: false
        default: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || !!startsWith(github.ref, 'refs/heads/release-') }}
      node_run_webpack:
        description: "Flag to always run the webpack production build."
        type: boolean
        required: false
        default: false
    secrets:
      DATAVISYN_BOT_REPO_TOKEN:
        required: false
      NODE_VERSION:
        required: false
      PYTHON_VERSION:
        required: false
      ENV_PASSWORD:
        required: false
      CYPRESS_ENV:
        required: false

env:
  NPM_REGISTRY: "https://registry.npmjs.org/"
  NODE_VERSION: "16.16"
  PYPI_REGISTRY: "https://upload.pypi.org/legacy/"
  PYPI_USERNAME: "datavisyn"
  PYTHON_VERSION: "3.10"
  WORKFLOW_BRANCH: "insight"

permissions:
  contents: read
  id-token: write

jobs:
  build-node:
    name: Node
    if: ${{ !inputs.cypress_enable || (!inputs.cypress_run_because_flag && inputs.cypress_run_because_branch != 'true') }}
    concurrency:
      group: "node-${{ github.workflow }}-${{ github.ref || github.head_ref }}-${{ inputs.branch }}"
      cancel-in-progress: true
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}
          token: ${{ github.event.repository.private == true && secrets.DATAVISYN_BOT_REPO_TOKEN  || github.token  }}
      - name: Checkout github-workflows
        uses: actions/checkout@v3
        with:
          repository: datavisyn/github-workflows
          ref: ${{ env.WORKFLOW_BRANCH }}
          path: ./tmp/github-workflows
      - name: Build node
        uses: ./tmp/github-workflows/.github/actions/build-node
        with:
          node_version: ${{ secrets.NODE_VERSION || env.NODE_VERSION }}
          npm_registry: ${{ env.NPM_REGISTRY }}
          github_ro_token: ${{ github.event.repository.private == true && secrets.DATAVISYN_BOT_REPO_TOKEN || github.token  }}
          run_webpack: ${{ inputs.node_run_webpack }}

  build-python:
    name: Python
    if: ${{ !inputs.cypress_enable || (!inputs.cypress_run_because_flag && inputs.cypress_run_because_branch != 'true') }}
    concurrency:
      group: "python-${{ github.workflow }}-${{ github.ref || github.head_ref }}-${{ inputs.branch }}"
      cancel-in-progress: true
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}
          token: ${{ github.event.repository.private == true && secrets.DATAVISYN_BOT_REPO_TOKEN  || github.token  }}
      - name: Checkout github-workflows
        uses: actions/checkout@v3
        with:
          repository: datavisyn/github-workflows
          ref: ${{ env.WORKFLOW_BRANCH }}
          path: ./tmp/github-workflows
      - name: Build python
        uses: ./tmp/github-workflows/.github/actions/build-python
        with:
          python_version: ${{ secrets.PYTHON_VERSION || env.PYTHON_VERSION }}
          github_ro_token: ${{ github.event.repository.private == true && secrets.DATAVISYN_BOT_REPO_TOKEN || github.token }}

  # If cypress is used, build node and python sequentially as it is avoiding the duplicate install overhead
  build-node-python-cypress:
    name: Node, Python, Cypress
    if: ${{ inputs.cypress_enable && (inputs.cypress_run_because_flag || inputs.cypress_run_because_branch == 'true') }}
    concurrency:
      group: "node-python-cypress-${{ github.workflow }}-${{ github.ref || github.head_ref }}-${{ inputs.branch }}"
      cancel-in-progress: true
    permissions:
      id-token: write
      contents: write
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout source repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}
          token: ${{ github.event.repository.private == true && secrets.DATAVISYN_BOT_REPO_TOKEN  || github.token  }}
      - name: Checkout github-workflows
        uses: actions/checkout@v3
        with:
          repository: datavisyn/github-workflows
          ref: ${{ env.WORKFLOW_BRANCH }}
          path: ./tmp/github-workflows
      - name: Build node
        uses: ./tmp/github-workflows/.github/actions/build-node
        with:
          node_version: ${{ secrets.NODE_VERSION || env.NODE_VERSION }}
          npm_registry: ${{ env.NPM_REGISTRY }}
          github_ro_token: ${{ github.event.repository.private == true && secrets.DATAVISYN_BOT_REPO_TOKEN || github.token  }}
          run_webpack: false # Disable the build here and call afterwards, as otherwise the yarn run env:decrypt will fail due to a missing yarn install
      - name: Build python
        uses: ./tmp/github-workflows/.github/actions/build-python
        with:
          python_version: ${{ secrets.PYTHON_VERSION || env.PYTHON_VERSION }}
          github_ro_token: ${{ github.event.repository.private == true && secrets.DATAVISYN_BOT_REPO_TOKEN || github.token }}
      - name: Decrypt .env.enc and <app>/.env.enc
        run: |
          yarn run env:decrypt -pass env:ENV_PASSWORD || true
          make env_decrypt || true
        env:
          ENV_PASSWORD: ${{ secrets.ENV_PASSWORD }}
      - name: Webpack build
        run: npm run webpack:prod
        shell: bash
      - name: Run cypress e2e tests
        uses: cypress-io/github-action@v4
        with:
          # Currently, the videos are buggy because of low-cpu/electron environment: https://github.com/cypress-io/cypress/issues/8210
          config: video=false,modifyObstructiveCode=false
          browser: chrome
          install: false
          # TODO: Create customizable variables for these?
          start: |
            yarn start dev_server_only=true
            make start
          wait-on: "http://localhost:8080, http://localhost:9000/health"
          env: ${{ secrets.CYPRESS_ENV }}
      - name: Run cypress component tests
        uses: cypress-io/github-action@v4
        with:
          # Currently, the videos are buggy because of low-cpu/electron environment: https://github.com/cypress-io/cypress/issues/8210
          config: video=false,modifyObstructiveCode=false
          browser: chrome
          install: false
          component: true
          # TODO: Do component tests need the frontend/backend?
          env: ${{ secrets.CYPRESS_ENV }}
      - name: Upload cypress screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      # - name: Upload cypress videos
      #   uses: actions/upload-artifact@v3
      #   if: always()
      #   with:
      #     name: cypress-videos
      #     path: cypress/videos
