name: Build and Publish Python and Node Repositories

on:
  workflow_call:
    inputs:
      publish:
        description: "true, if the package should be published to npm; otherwise false"
        default: false
        required: true
        type: boolean
      npm_registry:
        description: "npm registry to publish to"
        default: "https://registry.npmjs.org/"
        type: string        
      pypi_repository:
        description: "pypi registry to publish to"
        default: "https://pypi.org/pypi"
        type: string
      pypi_username:
        description: "pypi username"
        default: "testUser"
        type: string
    secrets:
      pypi_password:
        description: "password of pypi registry"
      npm_token:
        description: "token for npm registry"        
jobs:
  build-node:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        node-version: ["14.19"]
    steps:      
      - uses: actions/checkout@v3
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: ${{ inputs.npm_registry }}
      - name: Show Node.js and npm version
        run: |
          node -v
          npm -v
      - name: Install npm dependencies
        run: |
          npm install
      - name: Show installed npm dependencies
        run: |
          npm list --depth=1 || true
      - name: Build
        run: |
          npm run dist
      - name: publish to npm
        if: ${{ inputs.publish && inputs.publish != 'false' }}
        run: echo "publish"
        #run: npm publish
        env: 
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
  build-python:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
    steps:      
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Show python and pip version
        run: |
          python --version
          pip --version
      - name: Install python dependencies
        run: |
          make develop
      - name: Show installed pip packages
        run: |
          pip list || true
      - name: Linting
        run: |
          make lint check-format                  
      - name: Run tests
        run: |
          make test
      - name: publish to pip registry
        if: ${{ inputs.publish && inputs.publish != 'false' }}
        run: |
           echo "publish"
           pip install twine
#          echo -e "[pypi]" >> ~/.pypirc
#          echo -e "repository = $PYPI_REPOSITORY" >> ~/.pypirc
#          echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
#          echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
#          twine upload dist_python/*
        env: 
          PYPI_REPOSITORY: ${{secrets.pypi_repository}}
          PYPI_USERNAME: ${{secrets.pypi_username}}
          PYPI_PASSWORD: ${{secrets.pypi_password}}        
