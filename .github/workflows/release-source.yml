name: release-source

on:
  workflow_call:

permissions:
  contents: write

concurrency:
  group: '${{ github.workflow }}-${{ github.ref || github.head_ref }}'
  cancel-in-progress: true

env:
  GA_VERSION: "main"
  GITHUB_USER: "datavisyn-bot"
  WORKFLOW_BRANCH: "main"
  GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

jobs:
  release-repository:
    runs-on: ubuntu-22.04
    steps:
      - name: check branch
        if: ${{ github.ref_name != 'develop' }}
        run: |
          echo 'only the develop branch can be released.'
          exit 1
      # checkout specific repository
      - name: checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ github.token }}
      # checkout this workflow repository to get actions
      - name: checkout github-workflows repository
        uses: actions/checkout@v3
        with:
          repository: datavisyn/github-workflows
          ref: ${{ env.WORKFLOW_BRANCH }}
          path: ./tmp/github-workflows
      - name: check actor
        uses: ./tmp/github-workflows/.github/actions/check-actor
        with:
          dv_devops: ${{ vars.DV_DEVOPS }}
          actor: ${{ github.actor }}
          qms_are_allowed: "false"
      - name: get release version
        id: get-release-version
        run: |
          release_version=$(jq -r '.version' package.json | cut -d '-' -f 1)
          echo $release_version
          echo "RELEASE_VERSION=$release_version" >> $GITHUB_ENV
      - name: create release branch
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "<>"
          git checkout -b release/$RELEASE_VERSION
          git push origin release/$RELEASE_VERSION
      - name: Update package.json
        run: |
          jq '.version = env.RELEASE_VERSION' package.json > package.json.tmp
          mv package.json.tmp package.json
          git add package.json
          git commit -m "Update package.json version to $RELEASE_VERSION"
          git push origin release/$RELEASE_VERSION
      - name: create pull request
        id: create-pr
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{owner}/{repo}/pulls
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          title: "Release ${{ env.RELEASE_VERSION }}"
          body: "Release ${{ env.RELEASE_VERSION }}"
          head: "release/${{ env.RELEASE_VERSION }}"
          base: "main"
          draft: false
      - name: Get PR number
        run: echo "PR Number is ${{ steps.create-pr.outputs.data.number }}"
      
 
        

            