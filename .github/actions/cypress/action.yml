name: cypress
description: Run cypress on the results of build-node and build-python
author: datavisyn

inputs:
  node_version:
    description: "node version to use"
    default: "16.16"
    required: true
  github_ro_token:
    description: "github read-only token"
    default: "admin"
    required: true
  npm_registry:
    description: "npm registry"
    default: "https://registry.npmjs.org/"
    required: true
  python_version:
    description: "python version to use"
    default: "3.10"
    required: true
  restore_yarn_lock:
    description: "restores the node-yarn-lock artifact (only available when build-node was called before)"
    required: false
    default: true

runs:
  using: "composite"
  steps:
    # Node
    - name: Set up node version
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node_version }}
        registry-url: ${{ inputs.npm_registry }}
    - name: Show node and npm version
      run: |
        corepack enable
        node -v
        npm -v
      shell: bash
    - name: Git config
      if: ${{ inputs.github_ro_token != '' }}
      run: |
        git config --global url."https://$GITHUB_TOKEN@github.com/".insteadOf ssh://git@github.com/
        git config --add --global url."https://$GITHUB_TOKEN@github.com/".insteadOf git@github.com:
      env:
        GITHUB_TOKEN: ${{ inputs.github_ro_token }}
      shell: bash
    - name: Restore yarn cache
      uses: actions/cache@v3
      with:
        # This path is the global yarn cache, because for some reason the local .yarn/cache is not used. Maybe we need to set the cacheFolder, enableGlobalCache, ... options differently? @see https://yarnpkg.com/configuration/yarnrc#cacheFolder
        path: ~/.yarn/berry/cache/
        key: yarn-download-cache-${{ hashFiles('package.json') }}
        restore-keys: |
          yarn-download-cache-
    - uses: actions/download-artifact@v3
      # TODO: Remove the variable whenever we can ensure that build-node was called before
      if: inputs.restore_yarn_lock == 'true'
      with:
        name: node-yarn-lock
    - name: Install dependencies
      run: yarn install --inline-builds
      shell: bash
    # Python
    - name: Set up python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ inputs.python_version }}
        cache: "pip"
    - name: Install python dependencies
      run: make install
      shell: bash
