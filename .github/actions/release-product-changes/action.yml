name: release-product-changes
description: release product
author: datavisyn

inputs:
  known_repositories:
    description: "known repositories as json"
    required: true
  repository_version:
    description: "version of the repository for the package.json"
    required: true
  ga_version:
    description: "github action version to use"
    required: true
  prepare_release:
    description: "true, if this is called to prepare the release; false if it runs to prepare the develop"
    default: true
    required: true

runs:
  using: "composite"
  steps:
    - name: change release
      run: |
        # change version in package.json
        version=$(jq -r '.version' ./package.json)
        sed -i "s|\"version\": \"$version\"|\"version\": \"$REPOSITORY_VERSION\"|gI" ./package.json
        cat ./package.json
        # change visyn_product
        # change app version
        echo -e "$(jq --arg version "$REPOSITORY_VERSION" '.branch = $version' ./visyn_product.json)" > ./visyn_product.json
        known_repositories=$KNOWN_REPOSITORIES
        echo $known_repositories
        version=develop
        readarray -t components < <(jq  -rc '.components | keys[]' ./visyn_product.json)
        for component in "${components[@]}"; do
          echo "component: $component"
          readarray -t additionals < <(jq --arg var "${component}" -rc '.components | to_entries | .[] | select(.key==$var)| .value.additionals[]?' ./visyn_product.json)
          content="["
          for additional in "${additionals[@]}"; do
            name=$(echo "$additional" | jq  -rc '.name')
            repository=$(echo "$additional" | jq  -rc '.repo')
            branch=$(echo "$additional" | jq  -rc '.branch')
            echo $name
            echo $repository
            echo $PREPARE_RELEASE
            if [[ $PREPARE_RELEASE == "true" ]]; then
              version="$(echo $known_repositories | jq -r --arg var $name '.[$var] | .version')"
            fi
            echo $version
            content+="{\"name\": \"$name\", \"repo\": \"$repository\", \"branch\": \"v$version\"},"
            echo "$content"
          done
          content=${content::-1}
          content+="]"
          echo $content
          if [[ ${#content} -ge 1 ]] ; then
            echo -e "$(jq --arg var "${COMPONENT}" --argjson additionals "$content" '.components | to_entries | .[] | select(.key==$var)| .value.additionals = $additionals' ./visyn_product.json)" > ./visyn_product.json
          fi
        done
        #change version of github action references
        if [[ $PREPARE_RELEASE == "true" ]]; then
          find ./.github/workflows/ -name '*.yml' -exec sed -i "s/@main/@$GA_VERSION/g" {} \;
        else
          find ./.github/workflows/ -name '*.yml' -exec sed -i "s/@$GA_VERSION/@main/g" {} \;
        fi
      env:
        PREPARE_RELEASE: ${{ inputs.prepare_release }}
        REPOSITORY_VERSION: ${{ inputs.repository_version }}
        KNOWN_REPOSITORIES: ${{ inputs.known_repositories }}
        GA_VERSION: ${{ inputs.ga_version }}
      shell: bash
