name: release-product-changes
description: release product
author: datavisyn

inputs:
  known_repositories:
    description: "known repositories as json"
    required: true
  repository_version:
    description: "version of the repository for the package.json"
    required: true
  generator_version:
    description: "version of the generator to use"
    required: true
  ga_version:
    description: "github action version to use"
    required: true
  prepare_release:
    description: "true, if this is called to prepare the release; false if it runs to prepare the develop"
    default: true
    required: true

runs:
  using: "composite"
  steps:
    - name: change release
      run: |
        # change generator version
        generator_npm_develop=git+ssh://git@github.com:phovea/generator-phovea#develop
        if $PREPARE_RELEASE; then
          sed -i "s|\"generator-phovea\": \"$generator_npm_develop\"|\"generator-phovea\": \"$GENERATOR_VERSION\"|gI" ./package.json
        else
          sed -i "s|\"generator-phovea\": \"$GENERATOR_VERSION\"|\"generator-phovea\": \"$generator_npm_develop\"|gI" ./package.json
        fi
        # change version in package.json
        version=$(jq -r '.version' ./package.json)
        sed -i "s|\"version\": \"$version\"|\"version\": \"$REPOSITORY_VERSION\"|gI" ./package.json
        cat ./package.json
        # change phovea_product
        # frontend
        known_repositories=$KNOWN_REPOSITORIES
        content="[{"
        name=$(jq  -rc '.[] | select(.type == "web") | .repo' ./phovea_product.json)
        name=$(echo "$name" | sed -e 's|.*/||')
        echo $name
        version="develop"
        if $PREPARE_RELEASE; then
          version="$(echo $known_repositories | jq -r --arg var $name '.[$var] | .version')"
        fi
        echo $version
        owner="$(echo $known_repositories | jq -r --arg var $name '.[$var] | .owner')"
        content+="\"type\": \"web\", \"name\": \"$name\", \"repo\": \"$owner/$name\", \"branch\": \"v$version\",   \"additional\": ["
        readarray -t my_array < <(jq  -rc '.[] | select(.type == "web") | .additional[] ' ./phovea_product.json)
        for additional in "${my_array[@]}"; do
          name=$(echo $additional | jq  -rc '.name')
          name=$(echo "$name" | sed -e 's|.*/||')
          echo $name
          if $PREPARE_RELEASE; then
            version="$(echo $known_repositories | jq -r --arg var $name '.[$var] | .version')"
          fi
          echo $version
          owner="$(echo $known_repositories | jq -r --arg var $name '.[$var] | .owner')"
          content+="{\"name\": \"$name\", \"repo\": \"$owner/$name\", \"branch\": \"v$version\"},"
        done
        content=${content::-1}
        content+="]},"
        # backend
        content+="{"
        name=$(jq  -rc '.[] | select(.type == "api") | .repo' ./phovea_product.json)
        name=$(echo "$name" | sed -e 's|.*/||')
        echo $name
        if $PREPARE_RELEASE; then
          version="$(echo $known_repositories | jq -r --arg var $name '.[$var] | .version')"
        fi
        echo $version
        owner="$(echo $known_repositories | jq -r --arg var $name '.[$var] | .owner')"
        content+="\"type\": \"api\", \"name\": \"$name\", \"repo\": \"$owner/$name\", \"branch\": \"v$version\",   \"additional\": ["
        readarray -t my_array < <(jq  -rc '.[] | select(.type == "api") | .additional[]' ./phovea_product.json)
        for additional in "${my_array[@]}"; do
          echo "$additional"
          name=$(echo $additional | jq  -rc '.name')
          name=$(echo "$name" | sed -e 's|.*/||')
          echo $name
          if $PREPARE_RELEASE; then
            version="$(echo $known_repositories | jq -r --arg var $name '.[$var] | .version')"
          fi
          echo $version
          owner="$(echo $known_repositories | jq -r --arg var $name '.[$var] | .owner')"
          content+="{\"name\": \"$name\", \"repo\": \"$owner/$name\", \"branch\": \"v$version\"},"
        done
        content=${content::-1}
        content+="]}]"
        echo -e $content > ./phovea_product2.json
        jq '.' ./phovea_product2.json > ./phovea_product.json
        rm ./phovea_product2.json
        #change version of github action references
        if $PREPARE_RELEASE; then
          find ./.github/workflows/ -name '*.yml' -exec sed -i "s/@main/@$GA_VERSION/g" {} \;
        else
          find ./.github/workflows/ -name '*.yml' -exec sed -i "s/@$GA_VERSION/@main/g" {} \;
        fi
    env:
      PREPARE_RELEASE: ${{ inputs.prepare_release }}
      GENERATOR_VERSION: ${{ inputs.generator_version }}
      REPOSITORY_VERSION: ${{ inputs.repository_version }}
      KNOWN_REPOSITORIES: ${{ inputs.known_repositories }}
      GA_VERSION: ${{ inputs.ga_version }}
    shell: bash
