name: build-python
description: Build python via make build
author: datavisyn

inputs:
  python_version:
    description: "python version to use"
    default: "3.10"
    required: true
  github_ro_token:
    description: "github read-only token"
    default: "admin"
    required: true
  enable_cache:
    description: "enables the pip cache download and upload"
    required: false
    default: true
  run_install:
    default: true
    required: false
  run_lint:
    default: true
    required: false
  run_test:
    default: true
    required: false
  run_build:
    default: true
    required: false

runs:
  using: "composite"
  steps:
    - name: Set up python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python_version }}
        cache: ${{ inputs.enable_cache == 'true' && 'pip' || null }}
    # needs wheel for make
    - name: install additional requirements
      run: |
        pip install setuptools wheel
      shell: bash
    - name: Show python and pip version
      run: |
        python --version
        pip --version
      shell: bash
    - name: Git config
      if: ${{ inputs.github_ro_token != '' }}
      run: git config --global url."https://$GITHUB_TOKEN@github".insteadOf https://github
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_ro_token }}
    - name: Install python dependencies
      if: inputs.run_install == 'true'
      run: make develop
      shell: bash
    - name: Show installed pip packages
      if: inputs.run_install == 'true'
      run: pip list || true
      shell: bash
    - name: Linting
      if: inputs.run_install == 'true' && inputs.run_lint == 'true'
      run: make lint check-format
      shell: bash
    - name: Run tests
      if: inputs.run_install == 'true' && inputs.run_test == 'true'
      run: make test
      shell: bash
    - name: Build wheel
      if: inputs.run_install == 'true' && inputs.run_build == 'true'
      run: make build
      shell: bash
