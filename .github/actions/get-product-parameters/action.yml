name: returns inportant parameters for product

inputs:
  repository_name:
    description: "name of the current repository"
    required: true
    type: string
  branch_name:  
    description: "name of the current branch"
    required: true
    type: string
  time_zone:  
    description: "time zone to use to generate the image tag"
    required: true
    type: string
  has_workspace_branches:  
    description: "true, if this is a repository that has workspace branches included, else false"
    required: true
    type: boolean
    default: false    
outputs:
  app: 
    description: "app name of the product"
    value: ${{ steps.get-parameters.outputs.app }}
  api_repo: 
    description: "ecr repository for api"
    value: ${{ steps.get-parameters.outputs.api_repo }}
  web_repo: 
    description: "ecr repository for web"
    value: ${{ steps.get-parameters.outputs.web_repo }}    
  develop: 
    description: "true, if the branch is a develop branch, otherwise false"
    value: ${{ steps.get-parameters.outputs.develop }}
  aws: 
    description: "true, if image should be generated and pushed to aws; else false"
    value: ${{ steps.get-parameters.outputs.aws }}
  image_tag1: 
    description: "image tag, that has the general name"
    value: ${{ steps.get-parameters.outputs.image_tag1 }}
  image_tag2: 
    description: "image tag, that has a very specific name (included the current date)"
    value: ${{ steps.get-parameters.outputs.image_tag2 }}
  build_node: 
    description: "true, if node part should be built; else false"
    value: ${{ steps.get-parameters.outputs.build_node }} 
  build_python: 
    description: "true, if python part should be built; else false"
    value: ${{ steps.get-parameters.outputs.build_python }}                               
runs:
  using: "composite"
  steps:
    - name: get parameters
      id: get-parameters
      run: |
        product_name=$REPOSITORY_NAME
        post_fix=_product
        product_name=${product_name%$post_fix}
        app=$(jq  -rc '.[] | select(.type == "web") | .name' ./phovea_product.json)
        if [[ $app == null ]] ; then
          app=$(jq  -rc '.[] | select(.type == "web") | .repo' ./phovea_product.json)
          app=${app##*/}
        fi
        # build api/web
        build_node=true
        build_python=true
        check_type=$(jq  -rc '.[] | select(.type == "web")' ./phovea_product.json)
        if [[ -z $check_type ]] ; then
          build_node=false
        fi  
        check_type=$(jq  -rc '.[] | select(.type == "api")' ./phovea_product.json)
        if [[ -z $check_type ]] ; then
          build_python=false
        fi
        # product tolowercase
        api_repo="${product_name,,}/server"
        web_repo="${product_name,,}/web"
        # get everything from branch name
        # branchname should look <develop|master|main>_<sub_app>_<customer>_<aws>
        # for release candidates the branch name should look like: rc_<version>_<sub_app>_<customer>_<aws>-<date>
        branch_name=$BRANCH_NAME
        branch_name_orig=${branch_name##*/}
        branch_name=$branch_name_orig
        echo $branch_name
        aws=false
        develop=false
        sub_app=''
        if $HAS_WORKSPACE_BRANCHES; then
          aws=false
          if [[ $branch_name == *"_aws"* ]]; then
            aws=true
            post_fix=_aws
            branch_name=${branch_name%$post_fix}
          fi
          if [[ $branch_name == *"_ods"* ]]; then
            aws=true
            post_fix=_ods
            branch_name=${branch_name%$post_fix}
          fi
        else
          sub_app=${branch_name#*_}
          aws=true
        fi
        # develop branch
        if [[ $branch_name == develop ]] ; then 
          develop=true
        fi
        # get image tags
        image_tag1=$branch_name
        image_tag2=tagged-$image_tag1-$(TZ=$TIME_ZONE date +%Y%m%d-%H%M%S)
        # echo parameters
        echo "app=$app"
        echo "api_repo=$api_repo"
        echo "web_repo=$web_repo"
        echo "develop=$develop"
        echo "aws=$aws"
        echo "build_python=$build_python"
        echo "build_node=$build_node"
        echo "image_tag1=$image_tag1"
        echo "image_tag2=$image_tag2"
        # echo to output
        echo "::set-output name=app::$app"
        echo "::set-output name=api_repo::$api_repo"
        echo "::set-output name=web_repo::$web_repo"
        echo "::set-output name=develop::$develop"
        echo "::set-output name=aws::$aws"
        echo "::set-output name=image_tag1::$image_tag1"
        echo "::set-output name=image_tag2::$image_tag2"
        echo "::set-output name=build_node::$build_node"
        echo "::set-output name=build_python::$build_python"
      env:  
        HAS_WORKSPACE_BRANCHES: ${{ has_workspace_branches }}
        REPOSITORY_NAME: ${{ inputs.repository_name }}
        BRANCH_NAME: ${{ inputs.branch_name }}
        TIME_ZONE: ${{ inputs.time_zone }}
      shell: bash
      

