name: get-product-parameters
description: get product parameters for building product
author: datavisyn

inputs:
  branch_name:
    description: "name of the current branch"
    required: true
  time_zone:
    description: "time zone to use to generate the image tag"
    required: true

outputs:
  app:
    description: "app name of the product"
    value: ${{ steps.get-parameters.outputs.app }}
  repo:
    description: "repo name of the app"
    value: ${{ steps.get-parameters.outputs.repo }}
  branch:
    description: "branch name of the app"
    value: ${{ steps.get-parameters.outputs.branch }}
  trigger_automatic_deployment:
    description: "true, if the branch should be deployed automatically, otherwise false"
    value: ${{ steps.get-parameters.outputs.trigger_automatic_deployment }}
  customers:
    description: "customers of the branch - depending on the branch name"
    value: ${{ steps.get-parameters.outputs.customers }}
  sub_app:
    description: "sub_app of the repository (f.e. literature) - depending on the branch name"
    value: ${{ steps.get-parameters.outputs.sub_app }}
  image_tag1:
    description: "image tag, that has the general name"
    value: ${{ steps.get-parameters.outputs.image_tag1 }}
  image_tag2:
    description: "image tag, that has a very specific name (included the current date)"
    value: ${{ steps.get-parameters.outputs.image_tag2 }}
  build_time:
    description: "build time of the current run (in RFC 3339 see <https://www.rfc-editor.org/rfc/rfc3339#section-5.6>)"
    value: ${{ steps.get-parameters.outputs.build_time }}
  components:
    description: "components of the existing product"
    value: ${{ steps.get-parameters.outputs.components }}
  ecr_repos:
    description: "AWS ECR repositories"
    value: ${{ steps.get-parameters.outputs.ecr_repos }}
  ecr_repository_keys:
    description: "repository keys that are used for deployment"
    value: ${{ steps.get-parameters.outputs.ecr_repository_keys }}
  create_workspace:
    description: "true if workspace should be created else false"
    value: ${{ steps.get-parameters.outputs.create_workspace }}
  stage:
    description: "stage for the image (develop or production) depending on the branch name"
    value: ${{ steps.get-parameters.outputs.stage }}
runs:
  using: "composite"
  steps:
    - name: get parameters
      id: get-parameters
      run: |
        app=$(jq  -rc '.app' ./visyn_product.json)
        repo=$(jq  -rc '.repo' ./visyn_product.json)
        branch=$(jq  -rc '.branch' ./visyn_product.json)
        customers=$(jq  -rc '.customers' ./visyn_product.json)
        sub_app=$(jq  -rc '.sub_app' ./visyn_product.json)
        trigger_automatic_deployment=$(jq  -rc '.trigger_automatic_deployment' ./visyn_product.json)
        create_workspace=$(jq  -rc '.create_workspace' ./visyn_product.json)
        components=$(jq  -rc '.components | keys' ./visyn_product.json)
        ecr_repos=$(jq -r  '.components |.[] | .ecr_repo'  ./visyn_product.json)
        ecr_repos=$(echo $ecr_repos | tr " " ",")
        ecr_repository_keys=$(jq  -rc '.components | keys | .[]' ./visyn_product.json)
        ecr_repository_keys=$(echo $ecr_repository_keys | tr " " ",")
        # set default customers
        if [[ -z $customers || $customers == "null" ]] ; then
          customers=[\"datavisyn\"]
        fi
        if [[ -z $trigger_automatic_deployment && $BRANCH_NAME == develop* ]] ; then
          trigger_automatic_deployment=true
        fi
        stage=develop
        if [[ $BRANCH_NAME == main* || $BRANCH_NAME == rc-* || $BRANCH_NAME == v[0-9]* ]] ; then
          stage=production
        fi
        # get image tags
        build_time=$(TZ=$TIME_ZONE date +%Y-%m-%dT%H%M%SZ)
        image_tag2=$BRANCH_NAME
        image_tag1=tagged-$image_tag2-$build_time
        # echo parameters
        echo "app=$app"
        echo "repo=$repo"
        echo "branch=$branch"
        echo "trigger_automatic_deployment=$trigger_automatic_deployment"
        echo "customers=$customers"
        echo "sub_app=$sub_app"
        echo "image_tag1=$image_tag1"
        echo "image_tag2=$image_tag2"
        echo "components=$components"
        echo "ecr_repos=$ecr_repos"
        echo "ecr_repository_keys=$ecr_repository_keys"
        echo "create_workspace=$create_workspace"
        echo "stage=$stage"
        # echo to output
        echo "app=$app" >> "$GITHUB_OUTPUT"
        echo "repo=$repo" >> "$GITHUB_OUTPUT"
        echo "branch=$branch" >> "$GITHUB_OUTPUT"
        echo "trigger_automatic_deployment=$trigger_automatic_deployment" >> "$GITHUB_OUTPUT"
        echo "customers=$customers" >> "$GITHUB_OUTPUT"
        echo "sub_app=$sub_app" >> "$GITHUB_OUTPUT"
        echo "build_time=$build_time" >> "$GITHUB_OUTPUT"
        echo "image_tag1=$image_tag1" >> "$GITHUB_OUTPUT"
        echo "image_tag2=$image_tag2" >> "$GITHUB_OUTPUT"
        echo "components=$components" >> "$GITHUB_OUTPUT"
        echo "ecr_repos=$ecr_repos" >> "$GITHUB_OUTPUT"
        echo "ecr_repository_keys=$ecr_repository_keys" >> "$GITHUB_OUTPUT"
        echo "create_workspace=$create_workspace" >> "$GITHUB_OUTPUT"
        echo "stage=$stage" >> "$GITHUB_OUTPUT"
      env:
        BRANCH_NAME: ${{ inputs.branch_name }}
        TIME_ZONE: ${{ inputs.time_zone }}
      shell: bash
